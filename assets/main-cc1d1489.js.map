{"version":3,"file":"main-cc1d1489.js","sources":["../../src/main.js"],"sourcesContent":["import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport axios from \"axios\";\n\nconst modal = new SimpleLightbox('.gallery a', {\n    captionDelay: 250,\n    captions: true,\n    captionsData: \"alt\",\n    captionPosition: 'bottom',\n});\n\nconst galleryContainer = document.querySelector('.gallery');\nconst form = document.getElementById('form');\nconst loader = document.querySelector('.loader');\nconst loadMoreBtn = document.querySelector('loadmoreBtn');\n\nlet currentPage = 1;\nlet perPage = 20;\n\nform.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    loader.classList.remove('is-hidden');\n    galleryContainer.innerHTML = \"\";\n    const keyword = e.currentTarget.elements.search.value.trim();\n\n    if (keyword !== '') {\n        try {\n            const data = await fetchImages(keyword);\n            if (data.hits.length > 0) {\n                gallery(data.hits);\n              \n            } else {\n                iziToast.error({\n                    title: 'error',\n                    message: 'Sorry, there are no images matching your search query. Please try again!',\n                    position: 'topRight',\n                    messageColor: 'white',\n                    backgroundColor: '#EF4040',\n                });\n            }\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        } finally {\n            loader.classList.add('is-hidden');\n        }\n    }\n});\n\n// loadMoreBtn.addEventListener('click', onLoadMore);\n\nasync function onLoadMore() {\n    loader.classList.remove('is-hidden');\n    const keyword = form.elements.search.value.trim();\n    try {\n        const data = await fetchImages(keyword, currentPage);\n        if (data.hits.length > 0) {\n            gallery(data.hits);\n            currentPage += 1;\n        } else {\n            iziToast.error({\n                title: 'error',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n                position: 'topRight',\n                messageColor: 'white',\n                backgroundColor: '#EF4040',\n            });\n            loadMoreBtn.classList.add('is-hidden');\n        }\n    } catch (error) {\n        console.error('Error fetching data:', error);\n    } finally {\n        loader.classList.add('is-hidden');\n    }\n}\n\nasync function fetchImages(keyword, currentPage) {\n    const key = '42039867-09e41a1320e593858871044dc';\n    const params = new URLSearchParams({\n        key: key,\n        q: keyword,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: 'true',\n        page: currentPage,\n        per_page: perPage\n    });\n\n    const response = await axios.get(`https://pixabay.com/api/?${params}`);\n    return response.data;\n}\n\nconst galleryItem = ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n    <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" data-test=\"${largeImageURL}\">\n        </a>\n        <div class=\"image-details\">\n           \n            <div class=\"info-container\">\n                <span class=\"info-label\">Likes:</span>\n                <span class=\"info-value\">${likes}</span>\n            </div>\n            <div class=\"info-container\">\n                <span class=\"info-label\">Views:</span>\n                <span class=\"info-value\">${views}</span>\n            </div>\n            <div class=\"info-container\">\n                <span class=\"info-label\">Comments:</span>\n                <span class=\"info-value\">${comments}</span>\n            </div>\n            <div class=\"info-container\">\n                <span class=\"info-label\">Downloads:</span>\n                <span class=\"info-value\">${downloads}</span>\n            </div>\n        </div>\n    </li>`;\n\nconst gallery = (hits) => {\n    const galleryItemHtml = hits.map(galleryItem).join('');\n    galleryContainer.innerHTML = galleryItemHtml;\n    modal.refresh();\n};\n\n\n\n\n"],"names":["modal","SimpleLightbox","galleryContainer","form","loader","perPage","e","keyword","data","fetchImages","gallery","iziToast","error","currentPage","key","params","axios","galleryItem","webformatURL","largeImageURL","tags","likes","views","comments","downloads","hits","galleryItemHtml"],"mappings":"6vBAMA,MAAMA,EAAQ,IAAIC,EAAe,aAAc,CAC3C,aAAc,IACd,SAAU,GACV,aAAc,MACd,gBAAiB,QACrB,CAAC,EAEKC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAO,SAAS,eAAe,MAAM,EACrCC,EAAS,SAAS,cAAc,SAAS,EAC3B,SAAS,cAAc,aAAa,EAGxD,IAAIC,EAAU,GAEdF,EAAK,iBAAiB,SAAU,MAAOG,GAAM,CACzCA,EAAE,eAAc,EAChBF,EAAO,UAAU,OAAO,WAAW,EACnCF,EAAiB,UAAY,GAC7B,MAAMK,EAAUD,EAAE,cAAc,SAAS,OAAO,MAAM,OAEtD,GAAIC,IAAY,GACZ,GAAI,CACA,MAAMC,EAAO,MAAMC,EAAYF,CAAO,EAClCC,EAAK,KAAK,OAAS,EACnBE,EAAQF,EAAK,IAAI,EAGjBG,EAAS,MAAM,CACX,MAAO,QACP,QAAS,2EACT,SAAU,WACV,aAAc,QACd,gBAAiB,SACrC,CAAiB,CAER,OAAQC,EAAP,CACE,QAAQ,MAAM,uBAAwBA,CAAK,CACvD,QAAkB,CACNR,EAAO,UAAU,IAAI,WAAW,CACnC,CAET,CAAC,EA6BD,eAAeK,EAAYF,EAASM,EAAa,CAC7C,MAAMC,EAAM,qCACNC,EAAS,IAAI,gBAAgB,CAC/B,IAAKD,EACL,EAAGP,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,KAAMM,EACN,SAAUR,CAClB,CAAK,EAGD,OADiB,MAAMW,EAAM,IAAI,4BAA4BD,GAAQ,GACrD,IACpB,CAEA,MAAME,EAAc,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,wCAE1DL;AAAA,8CACMD,WAAsBE,iBAAoBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAM7CE;AAAA;AAAA;AAAA;AAAA,2CAIAC;AAAA;AAAA;AAAA;AAAA,2CAIAC;AAAA;AAAA;AAAA;AAAA,2CAIAC;AAAA;AAAA;AAAA,WAKrCd,EAAWe,GAAS,CACtB,MAAMC,EAAkBD,EAAK,IAAIR,CAAW,EAAE,KAAK,EAAE,EACrDf,EAAiB,UAAYwB,EAC7B1B,EAAM,QAAO,CACjB"}